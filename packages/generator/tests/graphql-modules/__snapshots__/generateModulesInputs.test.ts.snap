// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Generate Modules Inputs Should back with all inputs types 1`] = `
"import { gql } from 'graphql-modules';

    export default gql\`
scalar DateTime
type BatchPayload {
  count: Int!
}

enum TransactionIsolationLevel {
  ReadUncommitted
  ReadCommitted
  RepeatableRead
  Serializable
}

enum UserScalarFieldEnum {
  id
  createdAt
  email
  name
  password
  permissions
}

enum PostScalarFieldEnum {
  id
  published
  title
  authorId
  createdAt
  updatedAt
}

enum SortOrder {
  asc
  desc
}

enum JsonNullValueInput {
  JsonNull
}

enum QueryMode {
  default
  insensitive
}

enum JsonNullValueFilter {
  DbNull
  JsonNull
  AnyNull
}

enum NullsOrder {
  first
  last
}

input UserWhereInput {
  AND: [UserWhereInput!]
  OR: [UserWhereInput!]
  NOT: [UserWhereInput!]
  id: IntFilter
  createdAt: DateTimeFilter
  email: StringFilter
  name: StringNullableFilter
  password: StringFilter
  permissions: JsonFilter
  posts: PostListRelationFilter
}

input UserOrderByWithRelationInput {
  id: SortOrder
  createdAt: SortOrder
  email: SortOrder
  name: SortOrderInput
  password: SortOrder
  permissions: SortOrder
  posts: PostOrderByRelationAggregateInput
}

input UserWhereUniqueInput {
  id: Int
  email: String
  AND: [UserWhereInput!]
  OR: [UserWhereInput!]
  NOT: [UserWhereInput!]
  createdAt: DateTimeFilter
  name: StringNullableFilter
  password: StringFilter
  permissions: JsonFilter
  posts: PostListRelationFilter
}

input UserOrderByWithAggregationInput {
  id: SortOrder
  createdAt: SortOrder
  email: SortOrder
  name: SortOrderInput
  password: SortOrder
  permissions: SortOrder
  _count: UserCountOrderByAggregateInput
  _avg: UserAvgOrderByAggregateInput
  _max: UserMaxOrderByAggregateInput
  _min: UserMinOrderByAggregateInput
  _sum: UserSumOrderByAggregateInput
}

input UserScalarWhereWithAggregatesInput {
  AND: [UserScalarWhereWithAggregatesInput!]
  OR: [UserScalarWhereWithAggregatesInput!]
  NOT: [UserScalarWhereWithAggregatesInput!]
  id: IntWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  email: StringWithAggregatesFilter
  name: StringNullableWithAggregatesFilter
  password: StringWithAggregatesFilter
  permissions: JsonWithAggregatesFilter
}

input PostWhereInput {
  AND: [PostWhereInput!]
  OR: [PostWhereInput!]
  NOT: [PostWhereInput!]
  id: IntFilter
  published: BoolFilter
  title: StringFilter
  authorId: IntNullableFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  author: UserNullableScalarRelationFilter
}

input PostOrderByWithRelationInput {
  id: SortOrder
  published: SortOrder
  title: SortOrder
  authorId: SortOrderInput
  createdAt: SortOrder
  updatedAt: SortOrder
  author: UserOrderByWithRelationInput
}

input PostWhereUniqueInput {
  id: Int
  AND: [PostWhereInput!]
  OR: [PostWhereInput!]
  NOT: [PostWhereInput!]
  published: BoolFilter
  title: StringFilter
  authorId: IntNullableFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  author: UserNullableScalarRelationFilter
}

input PostOrderByWithAggregationInput {
  id: SortOrder
  published: SortOrder
  title: SortOrder
  authorId: SortOrderInput
  createdAt: SortOrder
  updatedAt: SortOrder
  _count: PostCountOrderByAggregateInput
  _avg: PostAvgOrderByAggregateInput
  _max: PostMaxOrderByAggregateInput
  _min: PostMinOrderByAggregateInput
  _sum: PostSumOrderByAggregateInput
}

input PostScalarWhereWithAggregatesInput {
  AND: [PostScalarWhereWithAggregatesInput!]
  OR: [PostScalarWhereWithAggregatesInput!]
  NOT: [PostScalarWhereWithAggregatesInput!]
  id: IntWithAggregatesFilter
  published: BoolWithAggregatesFilter
  title: StringWithAggregatesFilter
  authorId: IntNullableWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
}

input UserCreateInput {
  createdAt: DateTime
  email: String!
  name: String
  password: String!
  permissions: Json
  posts: PostCreateNestedManyWithoutAuthorInput
}

input UserUncheckedCreateInput {
  id: Int
  createdAt: DateTime
  email: String!
  name: String
  password: String!
  permissions: Json
  posts: PostUncheckedCreateNestedManyWithoutAuthorInput
}

input UserUpdateInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  permissions: Json
  posts: PostUpdateManyWithoutAuthorNestedInput
}

input UserUncheckedUpdateInput {
  id: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  permissions: Json
  posts: PostUncheckedUpdateManyWithoutAuthorNestedInput
}

input UserCreateManyInput {
  id: Int
  createdAt: DateTime
  email: String!
  name: String
  password: String!
  permissions: Json
}

input UserUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  permissions: Json
}

input UserUncheckedUpdateManyInput {
  id: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  permissions: Json
}

input PostCreateInput {
  published: Boolean
  title: String!
  createdAt: DateTime
  updatedAt: DateTime
  author: UserCreateNestedOneWithoutPostsInput
}

input PostUncheckedCreateInput {
  id: Int
  published: Boolean
  title: String!
  authorId: Int
  createdAt: DateTime
  updatedAt: DateTime
}

input PostUpdateInput {
  published: BoolFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  author: UserUpdateOneWithoutPostsNestedInput
}

input PostUncheckedUpdateInput {
  id: IntFieldUpdateOperationsInput
  published: BoolFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  authorId: NullableIntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input PostCreateManyInput {
  id: Int
  published: Boolean
  title: String!
  authorId: Int
  createdAt: DateTime
  updatedAt: DateTime
}

input PostUpdateManyMutationInput {
  published: BoolFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input PostUncheckedUpdateManyInput {
  id: IntFieldUpdateOperationsInput
  published: BoolFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  authorId: NullableIntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input IntFilter {
  equals: Int
  in: [Int!]
  notIn: [Int!]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: NestedIntFilter
}

input DateTimeFilter {
  equals: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: NestedDateTimeFilter
}

input StringFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  mode: QueryMode
  not: NestedStringFilter
}

input StringNullableFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  mode: QueryMode
  not: NestedStringNullableFilter
}

input JsonFilter {
  equals: Json
  path: [String!]
  mode: QueryMode
  string_contains: String
  string_starts_with: String
  string_ends_with: String
  array_starts_with: Json
  array_ends_with: Json
  array_contains: Json
  lt: Json
  lte: Json
  gt: Json
  gte: Json
  not: Json
}

input PostListRelationFilter {
  every: PostWhereInput
  some: PostWhereInput
  none: PostWhereInput
}

input SortOrderInput {
  sort: SortOrder!
  nulls: NullsOrder
}

input PostOrderByRelationAggregateInput {
  _count: SortOrder
}

input UserCountOrderByAggregateInput {
  id: SortOrder
  createdAt: SortOrder
  email: SortOrder
  name: SortOrder
  password: SortOrder
  permissions: SortOrder
}

input UserAvgOrderByAggregateInput {
  id: SortOrder
}

input UserMaxOrderByAggregateInput {
  id: SortOrder
  createdAt: SortOrder
  email: SortOrder
  name: SortOrder
  password: SortOrder
}

input UserMinOrderByAggregateInput {
  id: SortOrder
  createdAt: SortOrder
  email: SortOrder
  name: SortOrder
  password: SortOrder
}

input UserSumOrderByAggregateInput {
  id: SortOrder
}

input IntWithAggregatesFilter {
  equals: Int
  in: [Int!]
  notIn: [Int!]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: NestedIntWithAggregatesFilter
  _count: NestedIntFilter
  _avg: NestedFloatFilter
  _sum: NestedIntFilter
  _min: NestedIntFilter
  _max: NestedIntFilter
}

input DateTimeWithAggregatesFilter {
  equals: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: NestedDateTimeWithAggregatesFilter
  _count: NestedIntFilter
  _min: NestedDateTimeFilter
  _max: NestedDateTimeFilter
}

input StringWithAggregatesFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  mode: QueryMode
  not: NestedStringWithAggregatesFilter
  _count: NestedIntFilter
  _min: NestedStringFilter
  _max: NestedStringFilter
}

input StringNullableWithAggregatesFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  mode: QueryMode
  not: NestedStringNullableWithAggregatesFilter
  _count: NestedIntNullableFilter
  _min: NestedStringNullableFilter
  _max: NestedStringNullableFilter
}

input JsonWithAggregatesFilter {
  equals: Json
  path: [String!]
  mode: QueryMode
  string_contains: String
  string_starts_with: String
  string_ends_with: String
  array_starts_with: Json
  array_ends_with: Json
  array_contains: Json
  lt: Json
  lte: Json
  gt: Json
  gte: Json
  not: Json
  _count: NestedIntFilter
  _min: NestedJsonFilter
  _max: NestedJsonFilter
}

input BoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input IntNullableFilter {
  equals: Int
  in: [Int!]
  notIn: [Int!]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: NestedIntNullableFilter
}

input UserNullableScalarRelationFilter {
  is: UserWhereInput
  isNot: UserWhereInput
}

input PostCountOrderByAggregateInput {
  id: SortOrder
  published: SortOrder
  title: SortOrder
  authorId: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input PostAvgOrderByAggregateInput {
  id: SortOrder
  authorId: SortOrder
}

input PostMaxOrderByAggregateInput {
  id: SortOrder
  published: SortOrder
  title: SortOrder
  authorId: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input PostMinOrderByAggregateInput {
  id: SortOrder
  published: SortOrder
  title: SortOrder
  authorId: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input PostSumOrderByAggregateInput {
  id: SortOrder
  authorId: SortOrder
}

input BoolWithAggregatesFilter {
  equals: Boolean
  not: NestedBoolWithAggregatesFilter
  _count: NestedIntFilter
  _min: NestedBoolFilter
  _max: NestedBoolFilter
}

input IntNullableWithAggregatesFilter {
  equals: Int
  in: [Int!]
  notIn: [Int!]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: NestedIntNullableWithAggregatesFilter
  _count: NestedIntNullableFilter
  _avg: NestedFloatNullableFilter
  _sum: NestedIntNullableFilter
  _min: NestedIntNullableFilter
  _max: NestedIntNullableFilter
}

input PostCreateNestedManyWithoutAuthorInput {
  create: [PostCreateWithoutAuthorInput!]
  connectOrCreate: [PostCreateOrConnectWithoutAuthorInput!]
  createMany: PostCreateManyAuthorInputEnvelope
  connect: [PostWhereUniqueInput!]
}

input PostUncheckedCreateNestedManyWithoutAuthorInput {
  create: [PostCreateWithoutAuthorInput!]
  connectOrCreate: [PostCreateOrConnectWithoutAuthorInput!]
  createMany: PostCreateManyAuthorInputEnvelope
  connect: [PostWhereUniqueInput!]
}

input DateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input StringFieldUpdateOperationsInput {
  set: String
}

input NullableStringFieldUpdateOperationsInput {
  set: String
}

input PostUpdateManyWithoutAuthorNestedInput {
  create: [PostCreateWithoutAuthorInput!]
  connectOrCreate: [PostCreateOrConnectWithoutAuthorInput!]
  upsert: [PostUpsertWithWhereUniqueWithoutAuthorInput!]
  createMany: PostCreateManyAuthorInputEnvelope
  set: [PostWhereUniqueInput!]
  disconnect: [PostWhereUniqueInput!]
  delete: [PostWhereUniqueInput!]
  connect: [PostWhereUniqueInput!]
  update: [PostUpdateWithWhereUniqueWithoutAuthorInput!]
  updateMany: [PostUpdateManyWithWhereWithoutAuthorInput!]
  deleteMany: [PostScalarWhereInput!]
}

input IntFieldUpdateOperationsInput {
  set: Int
  increment: Int
  decrement: Int
  multiply: Int
  divide: Int
}

input PostUncheckedUpdateManyWithoutAuthorNestedInput {
  create: [PostCreateWithoutAuthorInput!]
  connectOrCreate: [PostCreateOrConnectWithoutAuthorInput!]
  upsert: [PostUpsertWithWhereUniqueWithoutAuthorInput!]
  createMany: PostCreateManyAuthorInputEnvelope
  set: [PostWhereUniqueInput!]
  disconnect: [PostWhereUniqueInput!]
  delete: [PostWhereUniqueInput!]
  connect: [PostWhereUniqueInput!]
  update: [PostUpdateWithWhereUniqueWithoutAuthorInput!]
  updateMany: [PostUpdateManyWithWhereWithoutAuthorInput!]
  deleteMany: [PostScalarWhereInput!]
}

input UserCreateNestedOneWithoutPostsInput {
  create: UserCreateWithoutPostsInput
  connectOrCreate: UserCreateOrConnectWithoutPostsInput
  connect: UserWhereUniqueInput
}

input BoolFieldUpdateOperationsInput {
  set: Boolean
}

input UserUpdateOneWithoutPostsNestedInput {
  create: UserCreateWithoutPostsInput
  connectOrCreate: UserCreateOrConnectWithoutPostsInput
  upsert: UserUpsertWithoutPostsInput
  disconnect: UserWhereInput
  delete: UserWhereInput
  connect: UserWhereUniqueInput
  update: UserUpdateToOneWithWhereWithoutPostsInput
}

input NullableIntFieldUpdateOperationsInput {
  set: Int
  increment: Int
  decrement: Int
  multiply: Int
  divide: Int
}

input NestedIntFilter {
  equals: Int
  in: [Int!]
  notIn: [Int!]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: NestedIntFilter
}

input NestedDateTimeFilter {
  equals: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: NestedDateTimeFilter
}

input NestedStringFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringFilter
}

input NestedStringNullableFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringNullableFilter
}

input NestedIntWithAggregatesFilter {
  equals: Int
  in: [Int!]
  notIn: [Int!]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: NestedIntWithAggregatesFilter
  _count: NestedIntFilter
  _avg: NestedFloatFilter
  _sum: NestedIntFilter
  _min: NestedIntFilter
  _max: NestedIntFilter
}

input NestedFloatFilter {
  equals: Float
  in: [Float!]
  notIn: [Float!]
  lt: Float
  lte: Float
  gt: Float
  gte: Float
  not: NestedFloatFilter
}

input NestedDateTimeWithAggregatesFilter {
  equals: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: NestedDateTimeWithAggregatesFilter
  _count: NestedIntFilter
  _min: NestedDateTimeFilter
  _max: NestedDateTimeFilter
}

input NestedStringWithAggregatesFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringWithAggregatesFilter
  _count: NestedIntFilter
  _min: NestedStringFilter
  _max: NestedStringFilter
}

input NestedStringNullableWithAggregatesFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringNullableWithAggregatesFilter
  _count: NestedIntNullableFilter
  _min: NestedStringNullableFilter
  _max: NestedStringNullableFilter
}

input NestedIntNullableFilter {
  equals: Int
  in: [Int!]
  notIn: [Int!]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: NestedIntNullableFilter
}

input NestedJsonFilter {
  equals: Json
  path: [String!]
  mode: QueryMode
  string_contains: String
  string_starts_with: String
  string_ends_with: String
  array_starts_with: Json
  array_ends_with: Json
  array_contains: Json
  lt: Json
  lte: Json
  gt: Json
  gte: Json
  not: Json
}

input NestedBoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input NestedBoolWithAggregatesFilter {
  equals: Boolean
  not: NestedBoolWithAggregatesFilter
  _count: NestedIntFilter
  _min: NestedBoolFilter
  _max: NestedBoolFilter
}

input NestedIntNullableWithAggregatesFilter {
  equals: Int
  in: [Int!]
  notIn: [Int!]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: NestedIntNullableWithAggregatesFilter
  _count: NestedIntNullableFilter
  _avg: NestedFloatNullableFilter
  _sum: NestedIntNullableFilter
  _min: NestedIntNullableFilter
  _max: NestedIntNullableFilter
}

input NestedFloatNullableFilter {
  equals: Float
  in: [Float!]
  notIn: [Float!]
  lt: Float
  lte: Float
  gt: Float
  gte: Float
  not: NestedFloatNullableFilter
}

input PostCreateWithoutAuthorInput {
  published: Boolean
  title: String!
  createdAt: DateTime
  updatedAt: DateTime
}

input PostUncheckedCreateWithoutAuthorInput {
  id: Int
  published: Boolean
  title: String!
  createdAt: DateTime
  updatedAt: DateTime
}

input PostCreateOrConnectWithoutAuthorInput {
  where: PostWhereUniqueInput!
  create: PostCreateWithoutAuthorInput!
}

input PostCreateManyAuthorInputEnvelope {
  data: [PostCreateManyAuthorInput!]!
  skipDuplicates: Boolean
}

input PostUpsertWithWhereUniqueWithoutAuthorInput {
  where: PostWhereUniqueInput!
  update: PostUpdateWithoutAuthorInput!
  create: PostCreateWithoutAuthorInput!
}

input PostUpdateWithWhereUniqueWithoutAuthorInput {
  where: PostWhereUniqueInput!
  data: PostUpdateWithoutAuthorInput!
}

input PostUpdateManyWithWhereWithoutAuthorInput {
  where: PostScalarWhereInput!
  data: PostUpdateManyMutationInput!
}

input PostScalarWhereInput {
  AND: [PostScalarWhereInput!]
  OR: [PostScalarWhereInput!]
  NOT: [PostScalarWhereInput!]
  id: IntFilter
  published: BoolFilter
  title: StringFilter
  authorId: IntNullableFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
}

input UserCreateWithoutPostsInput {
  createdAt: DateTime
  email: String!
  name: String
  password: String!
  permissions: Json
}

input UserUncheckedCreateWithoutPostsInput {
  id: Int
  createdAt: DateTime
  email: String!
  name: String
  password: String!
  permissions: Json
}

input UserCreateOrConnectWithoutPostsInput {
  where: UserWhereUniqueInput!
  create: UserCreateWithoutPostsInput!
}

input UserUpsertWithoutPostsInput {
  update: UserUpdateWithoutPostsInput!
  create: UserCreateWithoutPostsInput!
  where: UserWhereInput
}

input UserUpdateToOneWithWhereWithoutPostsInput {
  where: UserWhereInput
  data: UserUpdateWithoutPostsInput!
}

input UserUpdateWithoutPostsInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  permissions: Json
}

input UserUncheckedUpdateWithoutPostsInput {
  id: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  permissions: Json
}

input PostCreateManyAuthorInput {
  id: Int
  published: Boolean
  title: String!
  createdAt: DateTime
  updatedAt: DateTime
}

input PostUpdateWithoutAuthorInput {
  published: BoolFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input PostUncheckedUpdateWithoutAuthorInput {
  id: IntFieldUpdateOperationsInput
  published: BoolFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input PostUncheckedUpdateManyWithoutAuthorInput {
  id: IntFieldUpdateOperationsInput
  published: BoolFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

type AggregateUser {
  _count: UserCountAggregateOutputType
  _avg: UserAvgAggregateOutputType
  _sum: UserSumAggregateOutputType
  _min: UserMinAggregateOutputType
  _max: UserMaxAggregateOutputType
}

type UserGroupByOutputType {
  id: Int!
  createdAt: DateTime!
  email: String!
  name: String
  password: String!
  permissions: Json!
  _count: UserCountAggregateOutputType
  _avg: UserAvgAggregateOutputType
  _sum: UserSumAggregateOutputType
  _min: UserMinAggregateOutputType
  _max: UserMaxAggregateOutputType
}

type AggregatePost {
  _count: PostCountAggregateOutputType
  _avg: PostAvgAggregateOutputType
  _sum: PostSumAggregateOutputType
  _min: PostMinAggregateOutputType
  _max: PostMaxAggregateOutputType
}

type PostGroupByOutputType {
  id: Int!
  published: Boolean!
  title: String!
  authorId: Int
  createdAt: DateTime!
  updatedAt: DateTime!
  _count: PostCountAggregateOutputType
  _avg: PostAvgAggregateOutputType
  _sum: PostSumAggregateOutputType
  _min: PostMinAggregateOutputType
  _max: PostMaxAggregateOutputType
}

type UserCountOutputType {
  posts(where: PostWhereInput): Int!
}

type UserCountAggregateOutputType {
  id: Int!
  createdAt: Int!
  email: Int!
  name: Int!
  password: Int!
  permissions: Int!
  _all: Int!
}

type UserAvgAggregateOutputType {
  id: Float
}

type UserSumAggregateOutputType {
  id: Int
}

type UserMinAggregateOutputType {
  id: Int
  createdAt: DateTime
  email: String
  name: String
  password: String
}

type UserMaxAggregateOutputType {
  id: Int
  createdAt: DateTime
  email: String
  name: String
  password: String
}

type PostCountAggregateOutputType {
  id: Int!
  published: Int!
  title: Int!
  authorId: Int!
  createdAt: Int!
  updatedAt: Int!
  _all: Int!
}

type PostAvgAggregateOutputType {
  id: Float
  authorId: Float
}

type PostSumAggregateOutputType {
  id: Int
  authorId: Int
}

type PostMinAggregateOutputType {
  id: Int
  published: Boolean
  title: String
  authorId: Int
  createdAt: DateTime
  updatedAt: DateTime
}

type PostMaxAggregateOutputType {
  id: Int
  published: Boolean
  title: String
  authorId: Int
  createdAt: DateTime
  updatedAt: DateTime
}

type CreateManyUserAndReturnOutputType {
  id: Int!
  createdAt: DateTime!
  email: String!
  name: String
  password: String!
  permissions: Json!
}

type UpdateManyUserAndReturnOutputType {
  id: Int!
  createdAt: DateTime!
  email: String!
  name: String
  password: String!
  permissions: Json!
}

type CreateManyPostAndReturnOutputType {
  id: Int!
  published: Boolean!
  title: String!
  authorId: Int
  createdAt: DateTime!
  updatedAt: DateTime!
  author: User
}

type UpdateManyPostAndReturnOutputType {
  id: Int!
  published: Boolean!
  title: String!
  authorId: Int
  createdAt: DateTime!
  updatedAt: DateTime!
  author: User
}

\`;
"
`;
